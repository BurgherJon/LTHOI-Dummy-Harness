/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2016-02-18 22:11:37 UTC)
 * on 2016-03-22 at 22:34:36 UTC 
 * Modify at your own risk.
 */

package com.appspot.lthoi_test_harness.playerAPI;

/**
 * Service definition for PlayerAPI (v1).
 *
 * <p>
 * This API includes all of the methods for players. A player need only be authenticated as a user to access it.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link PlayerAPIRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class PlayerAPI extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.18.0-rc of the playerAPI library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://lthoi-test-harness.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "playerAPI/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public PlayerAPI(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  PlayerAPI(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "deleteBet".
   *
   * This request holds the parameters needed by the playerAPI server.  After setting any optional
   * parameters, call the {@link DeleteBet#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public DeleteBet deleteBet(java.lang.Integer id) throws java.io.IOException {
    DeleteBet result = new DeleteBet(id);
    initialize(result);
    return result;
  }

  public class DeleteBet extends PlayerAPIRequest<Void> {

    private static final String REST_PATH = "bet/{id}";

    /**
     * Create a request for the method "deleteBet".
     *
     * This request holds the parameters needed by the the playerAPI server.  After setting any
     * optional parameters, call the {@link DeleteBet#execute()} method to invoke the remote
     * operation. <p> {@link
     * DeleteBet#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected DeleteBet(java.lang.Integer id) {
      super(PlayerAPI.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public DeleteBet setAlt(java.lang.String alt) {
      return (DeleteBet) super.setAlt(alt);
    }

    @Override
    public DeleteBet setFields(java.lang.String fields) {
      return (DeleteBet) super.setFields(fields);
    }

    @Override
    public DeleteBet setKey(java.lang.String key) {
      return (DeleteBet) super.setKey(key);
    }

    @Override
    public DeleteBet setOauthToken(java.lang.String oauthToken) {
      return (DeleteBet) super.setOauthToken(oauthToken);
    }

    @Override
    public DeleteBet setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (DeleteBet) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public DeleteBet setQuotaUser(java.lang.String quotaUser) {
      return (DeleteBet) super.setQuotaUser(quotaUser);
    }

    @Override
    public DeleteBet setUserIp(java.lang.String userIp) {
      return (DeleteBet) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Integer id;

    /**

     */
    public java.lang.Integer getId() {
      return id;
    }

    public DeleteBet setId(java.lang.Integer id) {
      this.id = id;
      return this;
    }

    @Override
    public DeleteBet set(String parameterName, Object value) {
      return (DeleteBet) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getActiveLeagueSeasons".
   *
   * This request holds the parameters needed by the playerAPI server.  After setting any optional
   * parameters, call the {@link GetActiveLeagueSeasons#execute()} method to invoke the remote
   * operation.
   *
   * @return the request
   */
  public GetActiveLeagueSeasons getActiveLeagueSeasons() throws java.io.IOException {
    GetActiveLeagueSeasons result = new GetActiveLeagueSeasons();
    initialize(result);
    return result;
  }

  public class GetActiveLeagueSeasons extends PlayerAPIRequest<com.appspot.lthoi_test_harness.playerAPI.model.LeagueSeasonCollection> {

    private static final String REST_PATH = "league_seasoncollection";

    /**
     * Create a request for the method "getActiveLeagueSeasons".
     *
     * This request holds the parameters needed by the the playerAPI server.  After setting any
     * optional parameters, call the {@link GetActiveLeagueSeasons#execute()} method to invoke the
     * remote operation. <p> {@link GetActiveLeagueSeasons#initialize(com.google.api.client.googleapis
     * .services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
     * after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetActiveLeagueSeasons() {
      super(PlayerAPI.this, "GET", REST_PATH, null, com.appspot.lthoi_test_harness.playerAPI.model.LeagueSeasonCollection.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetActiveLeagueSeasons setAlt(java.lang.String alt) {
      return (GetActiveLeagueSeasons) super.setAlt(alt);
    }

    @Override
    public GetActiveLeagueSeasons setFields(java.lang.String fields) {
      return (GetActiveLeagueSeasons) super.setFields(fields);
    }

    @Override
    public GetActiveLeagueSeasons setKey(java.lang.String key) {
      return (GetActiveLeagueSeasons) super.setKey(key);
    }

    @Override
    public GetActiveLeagueSeasons setOauthToken(java.lang.String oauthToken) {
      return (GetActiveLeagueSeasons) super.setOauthToken(oauthToken);
    }

    @Override
    public GetActiveLeagueSeasons setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetActiveLeagueSeasons) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetActiveLeagueSeasons setQuotaUser(java.lang.String quotaUser) {
      return (GetActiveLeagueSeasons) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetActiveLeagueSeasons setUserIp(java.lang.String userIp) {
      return (GetActiveLeagueSeasons) super.setUserIp(userIp);
    }

    @Override
    public GetActiveLeagueSeasons set(String parameterName, Object value) {
      return (GetActiveLeagueSeasons) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getBets".
   *
   * This request holds the parameters needed by the playerAPI server.  After setting any optional
   * parameters, call the {@link GetBets#execute()} method to invoke the remote operation.
   *
   * @param houseBets
   * @param thisWeek
   * @return the request
   */
  public GetBets getBets(java.lang.Integer houseBets, java.lang.Integer thisWeek) throws java.io.IOException {
    GetBets result = new GetBets(houseBets, thisWeek);
    initialize(result);
    return result;
  }

  public class GetBets extends PlayerAPIRequest<com.appspot.lthoi_test_harness.playerAPI.model.BetCollection> {

    private static final String REST_PATH = "betcollection/{house_bets}/{this_week}";

    /**
     * Create a request for the method "getBets".
     *
     * This request holds the parameters needed by the the playerAPI server.  After setting any
     * optional parameters, call the {@link GetBets#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetBets#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param houseBets
     * @param thisWeek
     * @since 1.13
     */
    protected GetBets(java.lang.Integer houseBets, java.lang.Integer thisWeek) {
      super(PlayerAPI.this, "GET", REST_PATH, null, com.appspot.lthoi_test_harness.playerAPI.model.BetCollection.class);
      this.houseBets = com.google.api.client.util.Preconditions.checkNotNull(houseBets, "Required parameter houseBets must be specified.");
      this.thisWeek = com.google.api.client.util.Preconditions.checkNotNull(thisWeek, "Required parameter thisWeek must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetBets setAlt(java.lang.String alt) {
      return (GetBets) super.setAlt(alt);
    }

    @Override
    public GetBets setFields(java.lang.String fields) {
      return (GetBets) super.setFields(fields);
    }

    @Override
    public GetBets setKey(java.lang.String key) {
      return (GetBets) super.setKey(key);
    }

    @Override
    public GetBets setOauthToken(java.lang.String oauthToken) {
      return (GetBets) super.setOauthToken(oauthToken);
    }

    @Override
    public GetBets setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetBets) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetBets setQuotaUser(java.lang.String quotaUser) {
      return (GetBets) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetBets setUserIp(java.lang.String userIp) {
      return (GetBets) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("house_bets")
    private java.lang.Integer houseBets;

    /**

     */
    public java.lang.Integer getHouseBets() {
      return houseBets;
    }

    public GetBets setHouseBets(java.lang.Integer houseBets) {
      this.houseBets = houseBets;
      return this;
    }

    @com.google.api.client.util.Key("this_week")
    private java.lang.Integer thisWeek;

    /**

     */
    public java.lang.Integer getThisWeek() {
      return thisWeek;
    }

    public GetBets setThisWeek(java.lang.Integer thisWeek) {
      this.thisWeek = thisWeek;
      return this;
    }

    @com.google.api.client.util.Key("league_season_id")
    private java.lang.Integer leagueSeasonId;

    /**

     */
    public java.lang.Integer getLeagueSeasonId() {
      return leagueSeasonId;
    }

    public GetBets setLeagueSeasonId(java.lang.Integer leagueSeasonId) {
      this.leagueSeasonId = leagueSeasonId;
      return this;
    }

    @Override
    public GetBets set(String parameterName, Object value) {
      return (GetBets) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getCurrentWeek".
   *
   * This request holds the parameters needed by the playerAPI server.  After setting any optional
   * parameters, call the {@link GetCurrentWeek#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetCurrentWeek getCurrentWeek() throws java.io.IOException {
    GetCurrentWeek result = new GetCurrentWeek();
    initialize(result);
    return result;
  }

  public class GetCurrentWeek extends PlayerAPIRequest<com.appspot.lthoi_test_harness.playerAPI.model.Week> {

    private static final String REST_PATH = "week";

    /**
     * Create a request for the method "getCurrentWeek".
     *
     * This request holds the parameters needed by the the playerAPI server.  After setting any
     * optional parameters, call the {@link GetCurrentWeek#execute()} method to invoke the remote
     * operation. <p> {@link GetCurrentWeek#initialize(com.google.api.client.googleapis.services.Abstr
     * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
     * the constructor. </p>
     *
     * @since 1.13
     */
    protected GetCurrentWeek() {
      super(PlayerAPI.this, "GET", REST_PATH, null, com.appspot.lthoi_test_harness.playerAPI.model.Week.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCurrentWeek setAlt(java.lang.String alt) {
      return (GetCurrentWeek) super.setAlt(alt);
    }

    @Override
    public GetCurrentWeek setFields(java.lang.String fields) {
      return (GetCurrentWeek) super.setFields(fields);
    }

    @Override
    public GetCurrentWeek setKey(java.lang.String key) {
      return (GetCurrentWeek) super.setKey(key);
    }

    @Override
    public GetCurrentWeek setOauthToken(java.lang.String oauthToken) {
      return (GetCurrentWeek) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCurrentWeek setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCurrentWeek) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCurrentWeek setQuotaUser(java.lang.String quotaUser) {
      return (GetCurrentWeek) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCurrentWeek setUserIp(java.lang.String userIp) {
      return (GetCurrentWeek) super.setUserIp(userIp);
    }

    @Override
    public GetCurrentWeek set(String parameterName, Object value) {
      return (GetCurrentWeek) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getGames".
   *
   * This request holds the parameters needed by the playerAPI server.  After setting any optional
   * parameters, call the {@link GetGames#execute()} method to invoke the remote operation.
   *
   * @param leagueSeasonId
   * @param week
   * @return the request
   */
  public GetGames getGames(java.lang.Integer leagueSeasonId, java.lang.Integer week) throws java.io.IOException {
    GetGames result = new GetGames(leagueSeasonId, week);
    initialize(result);
    return result;
  }

  public class GetGames extends PlayerAPIRequest<com.appspot.lthoi_test_harness.playerAPI.model.GameCollection> {

    private static final String REST_PATH = "gamecollection/{league_season_id}/{week}";

    /**
     * Create a request for the method "getGames".
     *
     * This request holds the parameters needed by the the playerAPI server.  After setting any
     * optional parameters, call the {@link GetGames#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetGames#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param leagueSeasonId
     * @param week
     * @since 1.13
     */
    protected GetGames(java.lang.Integer leagueSeasonId, java.lang.Integer week) {
      super(PlayerAPI.this, "GET", REST_PATH, null, com.appspot.lthoi_test_harness.playerAPI.model.GameCollection.class);
      this.leagueSeasonId = com.google.api.client.util.Preconditions.checkNotNull(leagueSeasonId, "Required parameter leagueSeasonId must be specified.");
      this.week = com.google.api.client.util.Preconditions.checkNotNull(week, "Required parameter week must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetGames setAlt(java.lang.String alt) {
      return (GetGames) super.setAlt(alt);
    }

    @Override
    public GetGames setFields(java.lang.String fields) {
      return (GetGames) super.setFields(fields);
    }

    @Override
    public GetGames setKey(java.lang.String key) {
      return (GetGames) super.setKey(key);
    }

    @Override
    public GetGames setOauthToken(java.lang.String oauthToken) {
      return (GetGames) super.setOauthToken(oauthToken);
    }

    @Override
    public GetGames setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetGames) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetGames setQuotaUser(java.lang.String quotaUser) {
      return (GetGames) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetGames setUserIp(java.lang.String userIp) {
      return (GetGames) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("league_season_id")
    private java.lang.Integer leagueSeasonId;

    /**

     */
    public java.lang.Integer getLeagueSeasonId() {
      return leagueSeasonId;
    }

    public GetGames setLeagueSeasonId(java.lang.Integer leagueSeasonId) {
      this.leagueSeasonId = leagueSeasonId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer week;

    /**

     */
    public java.lang.Integer getWeek() {
      return week;
    }

    public GetGames setWeek(java.lang.Integer week) {
      this.week = week;
      return this;
    }

    @Override
    public GetGames set(String parameterName, Object value) {
      return (GetGames) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getMe".
   *
   * This request holds the parameters needed by the playerAPI server.  After setting any optional
   * parameters, call the {@link GetMe#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetMe getMe() throws java.io.IOException {
    GetMe result = new GetMe();
    initialize(result);
    return result;
  }

  public class GetMe extends PlayerAPIRequest<com.appspot.lthoi_test_harness.playerAPI.model.Me> {

    private static final String REST_PATH = "me";

    /**
     * Create a request for the method "getMe".
     *
     * This request holds the parameters needed by the the playerAPI server.  After setting any
     * optional parameters, call the {@link GetMe#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetMe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetMe() {
      super(PlayerAPI.this, "GET", REST_PATH, null, com.appspot.lthoi_test_harness.playerAPI.model.Me.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetMe setAlt(java.lang.String alt) {
      return (GetMe) super.setAlt(alt);
    }

    @Override
    public GetMe setFields(java.lang.String fields) {
      return (GetMe) super.setFields(fields);
    }

    @Override
    public GetMe setKey(java.lang.String key) {
      return (GetMe) super.setKey(key);
    }

    @Override
    public GetMe setOauthToken(java.lang.String oauthToken) {
      return (GetMe) super.setOauthToken(oauthToken);
    }

    @Override
    public GetMe setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetMe) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetMe setQuotaUser(java.lang.String quotaUser) {
      return (GetMe) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetMe setUserIp(java.lang.String userIp) {
      return (GetMe) super.setUserIp(userIp);
    }

    @Override
    public GetMe set(String parameterName, Object value) {
      return (GetMe) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTeam".
   *
   * This request holds the parameters needed by the playerAPI server.  After setting any optional
   * parameters, call the {@link GetTeam#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public GetTeam getTeam() throws java.io.IOException {
    GetTeam result = new GetTeam();
    initialize(result);
    return result;
  }

  public class GetTeam extends PlayerAPIRequest<com.appspot.lthoi_test_harness.playerAPI.model.Team> {

    private static final String REST_PATH = "team";

    /**
     * Create a request for the method "getTeam".
     *
     * This request holds the parameters needed by the the playerAPI server.  After setting any
     * optional parameters, call the {@link GetTeam#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetTeam#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected GetTeam() {
      super(PlayerAPI.this, "GET", REST_PATH, null, com.appspot.lthoi_test_harness.playerAPI.model.Team.class);
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTeam setAlt(java.lang.String alt) {
      return (GetTeam) super.setAlt(alt);
    }

    @Override
    public GetTeam setFields(java.lang.String fields) {
      return (GetTeam) super.setFields(fields);
    }

    @Override
    public GetTeam setKey(java.lang.String key) {
      return (GetTeam) super.setKey(key);
    }

    @Override
    public GetTeam setOauthToken(java.lang.String oauthToken) {
      return (GetTeam) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTeam setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTeam) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTeam setQuotaUser(java.lang.String quotaUser) {
      return (GetTeam) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTeam setUserIp(java.lang.String userIp) {
      return (GetTeam) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String city;

    /**

     */
    public java.lang.String getCity() {
      return city;
    }

    public GetTeam setCity(java.lang.String city) {
      this.city = city;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer id;

    /**

     */
    public java.lang.Integer getId() {
      return id;
    }

    public GetTeam setId(java.lang.Integer id) {
      this.id = id;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String team;

    /**

     */
    public java.lang.String getTeam() {
      return team;
    }

    public GetTeam setTeam(java.lang.String team) {
      this.team = team;
      return this;
    }

    @Override
    public GetTeam set(String parameterName, Object value) {
      return (GetTeam) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUser".
   *
   * This request holds the parameters needed by the playerAPI server.  After setting any optional
   * parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param leagueSeason
   * @return the request
   */
  public GetUser getUser(java.lang.String email, java.lang.Integer leagueSeason) throws java.io.IOException {
    GetUser result = new GetUser(email, leagueSeason);
    initialize(result);
    return result;
  }

  public class GetUser extends PlayerAPIRequest<com.appspot.lthoi_test_harness.playerAPI.model.User> {

    private static final String REST_PATH = "user/{email}/{league_season}";

    /**
     * Create a request for the method "getUser".
     *
     * This request holds the parameters needed by the the playerAPI server.  After setting any
     * optional parameters, call the {@link GetUser#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param leagueSeason
     * @since 1.13
     */
    protected GetUser(java.lang.String email, java.lang.Integer leagueSeason) {
      super(PlayerAPI.this, "GET", REST_PATH, null, com.appspot.lthoi_test_harness.playerAPI.model.User.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.leagueSeason = com.google.api.client.util.Preconditions.checkNotNull(leagueSeason, "Required parameter leagueSeason must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUser setAlt(java.lang.String alt) {
      return (GetUser) super.setAlt(alt);
    }

    @Override
    public GetUser setFields(java.lang.String fields) {
      return (GetUser) super.setFields(fields);
    }

    @Override
    public GetUser setKey(java.lang.String key) {
      return (GetUser) super.setKey(key);
    }

    @Override
    public GetUser setOauthToken(java.lang.String oauthToken) {
      return (GetUser) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUser setQuotaUser(java.lang.String quotaUser) {
      return (GetUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUser setUserIp(java.lang.String userIp) {
      return (GetUser) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public GetUser setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key("league_season")
    private java.lang.Integer leagueSeason;

    /**

     */
    public java.lang.Integer getLeagueSeason() {
      return leagueSeason;
    }

    public GetUser setLeagueSeason(java.lang.Integer leagueSeason) {
      this.leagueSeason = leagueSeason;
      return this;
    }

    @Override
    public GetUser set(String parameterName, Object value) {
      return (GetUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getUsers".
   *
   * This request holds the parameters needed by the playerAPI server.  After setting any optional
   * parameters, call the {@link GetUsers#execute()} method to invoke the remote operation.
   *
   * @param leagueSeason
   * @return the request
   */
  public GetUsers getUsers(java.lang.Integer leagueSeason) throws java.io.IOException {
    GetUsers result = new GetUsers(leagueSeason);
    initialize(result);
    return result;
  }

  public class GetUsers extends PlayerAPIRequest<com.appspot.lthoi_test_harness.playerAPI.model.UserCollection> {

    private static final String REST_PATH = "usercollection/{league_season}";

    /**
     * Create a request for the method "getUsers".
     *
     * This request holds the parameters needed by the the playerAPI server.  After setting any
     * optional parameters, call the {@link GetUsers#execute()} method to invoke the remote operation.
     * <p> {@link
     * GetUsers#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param leagueSeason
     * @since 1.13
     */
    protected GetUsers(java.lang.Integer leagueSeason) {
      super(PlayerAPI.this, "GET", REST_PATH, null, com.appspot.lthoi_test_harness.playerAPI.model.UserCollection.class);
      this.leagueSeason = com.google.api.client.util.Preconditions.checkNotNull(leagueSeason, "Required parameter leagueSeason must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetUsers setAlt(java.lang.String alt) {
      return (GetUsers) super.setAlt(alt);
    }

    @Override
    public GetUsers setFields(java.lang.String fields) {
      return (GetUsers) super.setFields(fields);
    }

    @Override
    public GetUsers setKey(java.lang.String key) {
      return (GetUsers) super.setKey(key);
    }

    @Override
    public GetUsers setOauthToken(java.lang.String oauthToken) {
      return (GetUsers) super.setOauthToken(oauthToken);
    }

    @Override
    public GetUsers setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetUsers) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetUsers setQuotaUser(java.lang.String quotaUser) {
      return (GetUsers) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetUsers setUserIp(java.lang.String userIp) {
      return (GetUsers) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("league_season")
    private java.lang.Integer leagueSeason;

    /**

     */
    public java.lang.Integer getLeagueSeason() {
      return leagueSeason;
    }

    public GetUsers setLeagueSeason(java.lang.Integer leagueSeason) {
      this.leagueSeason = leagueSeason;
      return this;
    }

    @Override
    public GetUsers set(String parameterName, Object value) {
      return (GetUsers) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "setBet".
   *
   * This request holds the parameters needed by the playerAPI server.  After setting any optional
   * parameters, call the {@link SetBet#execute()} method to invoke the remote operation.
   *
   * @param homeTeam
   * @param leagueSeasonId
   * @return the request
   */
  public SetBet setBet(java.lang.String homeTeam, java.lang.Integer leagueSeasonId) throws java.io.IOException {
    SetBet result = new SetBet(homeTeam, leagueSeasonId);
    initialize(result);
    return result;
  }

  public class SetBet extends PlayerAPIRequest<com.appspot.lthoi_test_harness.playerAPI.model.Bet> {

    private static final String REST_PATH = "setBet/{home_team}/{league_season_id}";

    /**
     * Create a request for the method "setBet".
     *
     * This request holds the parameters needed by the the playerAPI server.  After setting any
     * optional parameters, call the {@link SetBet#execute()} method to invoke the remote operation.
     * <p> {@link
     * SetBet#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param homeTeam
     * @param leagueSeasonId
     * @since 1.13
     */
    protected SetBet(java.lang.String homeTeam, java.lang.Integer leagueSeasonId) {
      super(PlayerAPI.this, "POST", REST_PATH, null, com.appspot.lthoi_test_harness.playerAPI.model.Bet.class);
      this.homeTeam = com.google.api.client.util.Preconditions.checkNotNull(homeTeam, "Required parameter homeTeam must be specified.");
      this.leagueSeasonId = com.google.api.client.util.Preconditions.checkNotNull(leagueSeasonId, "Required parameter leagueSeasonId must be specified.");
    }

    @Override
    public SetBet setAlt(java.lang.String alt) {
      return (SetBet) super.setAlt(alt);
    }

    @Override
    public SetBet setFields(java.lang.String fields) {
      return (SetBet) super.setFields(fields);
    }

    @Override
    public SetBet setKey(java.lang.String key) {
      return (SetBet) super.setKey(key);
    }

    @Override
    public SetBet setOauthToken(java.lang.String oauthToken) {
      return (SetBet) super.setOauthToken(oauthToken);
    }

    @Override
    public SetBet setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SetBet) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SetBet setQuotaUser(java.lang.String quotaUser) {
      return (SetBet) super.setQuotaUser(quotaUser);
    }

    @Override
    public SetBet setUserIp(java.lang.String userIp) {
      return (SetBet) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key("home_team")
    private java.lang.String homeTeam;

    /**

     */
    public java.lang.String getHomeTeam() {
      return homeTeam;
    }

    public SetBet setHomeTeam(java.lang.String homeTeam) {
      this.homeTeam = homeTeam;
      return this;
    }

    @com.google.api.client.util.Key("league_season_id")
    private java.lang.Integer leagueSeasonId;

    /**

     */
    public java.lang.Integer getLeagueSeasonId() {
      return leagueSeasonId;
    }

    public SetBet setLeagueSeasonId(java.lang.Integer leagueSeasonId) {
      this.leagueSeasonId = leagueSeasonId;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.Integer id;

    /**

     */
    public java.lang.Integer getId() {
      return id;
    }

    public SetBet setId(java.lang.Integer id) {
      this.id = id;
      return this;
    }

    @Override
    public SetBet set(String parameterName, Object value) {
      return (SetBet) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "setMe".
   *
   * This request holds the parameters needed by the playerAPI server.  After setting any optional
   * parameters, call the {@link SetMe#execute()} method to invoke the remote operation.
   *
   * @param email
   * @param fname
   * @param linitial
   * @param lname
   * @return the request
   */
  public SetMe setMe(java.lang.String email, java.lang.String fname, java.lang.String linitial, java.lang.String lname) throws java.io.IOException {
    SetMe result = new SetMe(email, fname, linitial, lname);
    initialize(result);
    return result;
  }

  public class SetMe extends PlayerAPIRequest<com.appspot.lthoi_test_harness.playerAPI.model.Me> {

    private static final String REST_PATH = "setMe/{email}/{fname}/{linitial}/{lname}";

    /**
     * Create a request for the method "setMe".
     *
     * This request holds the parameters needed by the the playerAPI server.  After setting any
     * optional parameters, call the {@link SetMe#execute()} method to invoke the remote operation.
     * <p> {@link
     * SetMe#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @param fname
     * @param linitial
     * @param lname
     * @since 1.13
     */
    protected SetMe(java.lang.String email, java.lang.String fname, java.lang.String linitial, java.lang.String lname) {
      super(PlayerAPI.this, "POST", REST_PATH, null, com.appspot.lthoi_test_harness.playerAPI.model.Me.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
      this.fname = com.google.api.client.util.Preconditions.checkNotNull(fname, "Required parameter fname must be specified.");
      this.linitial = com.google.api.client.util.Preconditions.checkNotNull(linitial, "Required parameter linitial must be specified.");
      this.lname = com.google.api.client.util.Preconditions.checkNotNull(lname, "Required parameter lname must be specified.");
    }

    @Override
    public SetMe setAlt(java.lang.String alt) {
      return (SetMe) super.setAlt(alt);
    }

    @Override
    public SetMe setFields(java.lang.String fields) {
      return (SetMe) super.setFields(fields);
    }

    @Override
    public SetMe setKey(java.lang.String key) {
      return (SetMe) super.setKey(key);
    }

    @Override
    public SetMe setOauthToken(java.lang.String oauthToken) {
      return (SetMe) super.setOauthToken(oauthToken);
    }

    @Override
    public SetMe setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (SetMe) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public SetMe setQuotaUser(java.lang.String quotaUser) {
      return (SetMe) super.setQuotaUser(quotaUser);
    }

    @Override
    public SetMe setUserIp(java.lang.String userIp) {
      return (SetMe) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public SetMe setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String fname;

    /**

     */
    public java.lang.String getFname() {
      return fname;
    }

    public SetMe setFname(java.lang.String fname) {
      this.fname = fname;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String linitial;

    /**

     */
    public java.lang.String getLinitial() {
      return linitial;
    }

    public SetMe setLinitial(java.lang.String linitial) {
      this.linitial = linitial;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String lname;

    /**

     */
    public java.lang.String getLname() {
      return lname;
    }

    public SetMe setLname(java.lang.String lname) {
      this.lname = lname;
      return this;
    }

    @Override
    public SetMe set(String parameterName, Object value) {
      return (SetMe) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link PlayerAPI}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link PlayerAPI}. */
    @Override
    public PlayerAPI build() {
      return new PlayerAPI(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link PlayerAPIRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setPlayerAPIRequestInitializer(
        PlayerAPIRequestInitializer playerapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(playerapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
